import json
from collections import OrderedDict
from pprint import pprint
from core.database import TableType
from core.mdb import MDBDatabase, make_cursor, make_mdb_odbc_connection
from core.utils import make_inner_paths_for_table
import os


os.environ.setdefault("DJANGO_SETTINGS_MODULE", "_project_.settings")

# ---------------------Подключение к базе данных------------------------
db_file = r'C:\Users\Tanika\PycharmProjects\CreateMaps\base.mdb'
user = 'admin'
password = 'Masterkey1'

conn = utils.make_mdb_odbc_connection(db_file, user, password)
c = utils.make_cursor(conn)

# ---------------------Функция преобразования данных в формат, пригодный для наложения на Яндекс.Карту------------------------
def create_yandex_point_object(point_id, coords, name, lala):
    point_json = {
        "type": "Feature",
        "id": point_id,
        "geometry": {
            "type": "Point",
            "coordinates": coords
        },
        "properties": {
            "balloonContent": '<h3>'+name+"</h3>",
            "clusterCaption": name,
            "hintContent": "Текст подсказки",
            "name": lala
        }
    }
    return point_json

# ---------------------Считывание данных из базы и формирование объектов для наложения на карту------------------------
points = []
c.execute("select ОПИ_Участки.ИДУчастка, ОПИ_Участки.Наименование, "
          "ОПИ_Участки.[Координата-широта], ОПИ_Участки.[Координата-долгота] "
          "from ОПИ_Участки;")


for row in rows:
    if not row[2] or not row[3]:
        continue
    name = row[1] if row[1] else ''
    coords = [float(row[2].replace(',', '.')), float(row[3].replace(',', '.'))]
    id_ = row[0]
    if count % 2 == 0:
        lala = "Tanya"
    else:
        lala = 'Pasha'
    count += 1

    point = create_yandex_point_object(id_, coords, name, lala)
    points.append(point)
# print(points)
json_points = {
  "type": "FeatureCollection",
  "features": points
}

print(json_points)
#
# # ---------------------Создание файла data.json для наложения объектов на карту------------------------
json_points = json.dumps(json_points, separators=(',', ':'))
f = open('_project_/static/data.json', 'w')
f.write(json_points)
f.close()

types = set()

# ---------------------Тестирование работы с бд------------------------
def work_with_database(c, c2):
    for x in c.tables():

        # print(type(x))
        table_cat = x.get('table_cat')
        table_schema = x.get('table_schema')
        table_name = x.get('table_name')
        table_type = x.get('table_type')
        remarks = x.get('remarks')
        # if not table_name.startswith('M'):
        #     continue
        print('-' * 20)
        print(x[1:])
        # print(table_cat, table_schema, table_name, table_type, remarks)
        for y in c2.columns(table_name):
            table_cat = y.get('table_cat')
            table_schem = y.get('table_schema')
            table_name = y.get('table_name')
            column_name = y.get('column_name')
            data_type = y.get('data_type')
            type_name = y.get('type_name')
            column_size = y.get('column_size')
            buffer_length = y.get('buffer_length')
            decimal_digits = y.get('decimal_digits')
            num_prec_radix = y.get('num_prec_radix')
            nullable = y.get('nullable')
            remarks = y.get('remarks')
            column_def = y.get('column_def')
            sql_data_type = y.get('sql_data_type')
            sql_datetime_sub = y.get('sql_datetime_sub')
            char_octet_length = y.get('char_octet_length')
            ordinal_position = y.get('ordinal_position')
            is_nullable = y.get('is_nullable')
            # print(y[1:])
            # types.add(type_name)
            # print(table_qualifier, table_schem, table_name, column_name, data_type, type_name, precision, length, scale,
            # radix, nullable, remarks)
            # print(table_schem, table_name, column_name, data_type, type_name, column_size, buffer_length,
            #       decimal_digits, num_prec_radix, nullable, remarks, column_def, sql_data_type, sql_datetime_sub,
            #       char_octet_length, ordinal_position, is_nullable)
            # print(c2.getTypeInfo(data_type))


# c2 = utils.make_cursor(conn)
# work_with_database(c, c2)
# print(types)

# первое слово - поле - внешний ключ, ссылающийся на 2-ю таблицу. второе слово - название таблицы с внешним ключом
# третье слово - поле - идентификатор 2-ой таблицы, на который ссылается внешний ключ. Четвертое слово - название таблицы, на которую ссылается первая таблица.
"""
(1, 2, 0, 'Цель передачи', 'ПереданныеОтходы', 'TypeID', 'TypeCommon', 'FK_TCПереданныеОтходы')
(1, 2, 0, 'Код ОКАТО', 'ДТ_Объекты', 'КодОКАТО', 'ОКАТО', 'FK_ОКАТО')
(1, 2, 0, 'КодОКВЭД_ЦЭМК', 'ОКВЭД', 'КодОКВЭД', 'ОКВЭД_ЦЭМК', 'FK_ОКВЭД')
(1, 2, 0, 'КодКатегории', 'ОПИ_Запасы', 'КодКатегории', 'Спр_ОпиКатегорияПИ', 'FK_ОПИ_ЗапасыКатегории')
(1, 2, 0, 'ИДУчасткаОПИ', 'ОПИ_УчасткиОПИ', 'ИДУчасткаОПИ', 'ОПИ_Запасы', 'FK_ОПИ_ЗапасыУчастки')
(1, 2, 0, 'КодСостояния', 'ОПИ_Лицензии', 'КодСостояния', 'Спр_ОПИЛицСостояние', 'FK_ОПИ_ЛицензииСостояние')
(1, 2, 0, 'КодХС', 'ОПИ_Лицензии', 'КодХС', 'ХозяйствующиеСубъекты', 'FK_ОПИ_ЛицензииХС')
(1, 2, 0, '[Код категории земли]', 'ОПИ_Месторождения', 'КодКатегории', 'Спр_ОПИКатегорияЗемли', 'FK_ОПИ_МесторожденияКатЗемли')
(1, 2, 0, 'КодМО', 'ОПИ_Месторождения', 'Код округа', 'Спр_Округ', 'FK_ОПИ_МесторожденияМО')
(1, 2, 0, 'ОКАТО', 'ОПИ_Месторождения', 'КодОКАТО', 'ОКАТО', 'FK_ОПИ_МесторожденияОКАТО')
(1, 2, 0, '[Код раздела баланса]', 'ОПИ_Месторождения', '[Код раздела]', 'Спр_ОПИРазделБаланса', 'FK_ОПИ_МесторожденияРазделы')
(1, 2, 0, '[Код способа отработки]', 'ОПИ_Месторождения', 'КодСпособа', 'Спр_ОПИСпособОтработки', 'FK_ОПИ_МесторожденияСпОтр')
(1, 2, 0, '[Код категории земли]', 'ОПИ_Проявления', 'КодКатегории', 'Спр_ОПИКатегорияЗемли', 'FK_ОПИ_ПроявленияКатЗемли')
(1, 2, 0, 'КодОКАТО', 'ОПИ_Проявления', 'ОКАТО', 'ОКАТО', 'FK_ОПИ_ПроявленияОкато')
(1, 2, 0, 'ИДПроявленияУчастки', 'ОПИ_ПроявленияУчастки', 'ИДПроявленияУчастки', 'ОПИ_ПроявленияУчасткиКоординаты', 'FK_ОПИ_ПроявленияУчасткиКоординатыУчастки')
(1, 2, 0, 'ИДЛицензии', 'ОПИ_ПроявленияУчастки', 'ИДЛицензии', 'ОПИ_Лицензии', 'FK_ОПИ_ПроявленияУчасткиЛицензии')
(1, 2, 0, 'КодГруппы', 'ОПИ_ПроявленияУчасткиОПИГруппы', 'КодГруппы', 'Спр_ОПИГруппы', 'FK_ОПИ_ПроявленияУчасткиОПИГруппыГр')
(1, 2, 0, 'ИДПроявленияУчасткиОПИ', 'ОПИ_ПроявленияУчасткиОПИГруппы', 'ИДПроявленияУчасткиОПИ', 'ОПИ_ПроявленияУчасткиОПИ', 'FK_ОПИ_ПроявленияУчасткиОПИГруппыОПИ')
(1, 2, 0, 'КодОПИ', 'ОПИ_ПроявленияУчасткиОПИ', 'КодОПИ', 'Спр_Опи', 'FK_ОПИ_ПроявленияУчасткиОПИОПИ')
(1, 2, 0, 'ИДПроявленияУчастки', 'ОПИ_ПроявленияУчастки', 'ИДПроявленияУчастки', 'ОПИ_ПроявленияУчасткиОПИ', 'FK_ОПИ_ПроявленияУчасткиОПИУчастки')
(1, 2, 0, 'ИДПроявления', 'ОПИ_Проявления', 'ИДПроявления', 'ОПИ_ПроявленияУчастки', 'FK_ОПИ_ПроявленияУчасткиПр')
(1, 2, 0, 'КодФормыСобственности', 'ОПИ_ПроявленияУчастки', 'КодСобственности', 'Спр_ОПИФормаСобственности', 'FK_ОПИ_ПроявленияУчасткиФорСоб')
(1, 2, 0, 'ИДУчастка', 'ОПИ_Участки', 'ИДУчастка', 'ОПИ_УчасткиКоординаты', 'FK_ОПИ_УчасткиКоординатыУчастки')
(1, 2, 0, 'ИДЛицензии', 'ОПИ_Участки', 'ИДЛицензии', 'ОПИ_Лицензии', 'FK_ОПИ_УчасткиЛицензии')
(1, 2, 0, 'ИДМесторождения', 'ОПИ_Месторождения', 'ИДМесторождения', 'ОПИ_Участки', 'FK_ОПИ_УчасткиМесторождения')
(1, 2, 0, 'ОКЕИ', 'ОПИ_Участки', 'КодОКЕИ', 'ОКЕИ', 'FK_ОПИ_УчасткиОКЕИ')
(1, 2, 0, 'КодГруппы', 'ОПИ_УчасткиОПИГруппы', 'КодГруппы', 'Спр_ОПИГруппы', 'FK_ОПИ_УчасткиОПИГруппыГр')
(1, 2, 0, 'ОКЕИ', 'ОПИ_УчасткиОПИГруппы', 'КодОКЕИ', 'ОКЕИ', 'FK_ОПИ_УчасткиОПИГруппыОКЕИ')
(1, 2, 0, 'ИДУчасткаОПИ', 'ОПИ_УчасткиОПИГруппы', 'ИДУчасткаОПИ', 'ОПИ_УчасткиОПИ', 'FK_ОПИ_УчасткиОПИГруппыОПИ')
(1, 2, 0, 'ОКЕИ', 'ОПИ_УчасткиОПИ', 'КодОКЕИ', 'ОКЕИ', 'FK_ОПИ_УчасткиОПИОКЕИ')
(1, 2, 0, 'КодОПИ', 'ОПИ_УчасткиОПИ', 'КодОПИ', 'Спр_Опи', 'FK_ОПИ_УчасткиОПИОПИ')
(1, 2, 0, 'ИДУчасткаОПИ', 'ОПИ_УчасткиОПИПрименение', 'ИДУчасткаОПИ', 'ОПИ_УчасткиОПИ', 'FK_ОПИ_УчасткиОПИПрименениеОПИ')
(1, 2, 0, 'КодПрименения', 'ОПИ_УчасткиОПИПрименение', 'КодПрименения', 'Спр_ОПИПрименение', 'FK_ОПИ_УчасткиОПИПрименениеПр')
(1, 2, 0, 'ИДУчасткаОПИ', 'ОПИ_УчасткиОПИПродукция', 'ИДУчасткаОПИ', 'ОПИ_УчасткиОПИ', 'FK_ОПИ_УчасткиОПИПродукцияОПИ')
(1, 2, 0, 'КодПродукции', 'ОПИ_УчасткиОПИПродукция', 'КодПродукции', 'Спр_ОПИПродукция', 'FK_ОПИ_УчасткиОПИПродукцияПр')
(1, 2, 0, 'ИДУчастка', 'ОПИ_Участки', 'ИДУчастка', 'ОПИ_УчасткиОПИ', 'FK_ОПИ_УчасткиОПИУчастки')
(1, 2, 0, 'КодСостояния', 'ОПИ_Участки', 'КодСостояния', 'Спр_ОпиСостояние', 'FK_ОПИ_УчасткиСостояние')
(1, 2, 0, 'КодСтатуса', 'ОПИ_Участки', 'КодСтатуса', 'Спр_ОПИСтатусУчастка', 'FK_ОПИ_УчасткиСтатус')
(1, 2, 0, 'ИДУчасткаОПИ', 'ОПИ_УчасткиОПИ', 'ИДУчасткаОПИ', 'ОПИ_УтвЗапасы', 'FK_ОПИ_УчасткиУтвЗапасы')
(1, 2, 0, 'КодФормыСобственности', 'ОПИ_Участки', 'КодСобственности', 'Спр_ОПИФормаСобственности', 'FK_ОПИ_УчасткиФорСоб')
(1, 2, 0, 'КодОбъектаРазмещения', 'ОбъектыРазмещения', 'КодОбъектаРазмещения', 'ОбъектыРазмещенияПрежниеВладельцы', 'FK_ОРПВОбъектыРазмещения')
(1, 2, 0, 'Класс опасности', 'ПаспортОтходаХС', 'Класс опасности ОПС', 'ТехническийОтчетОтходыХС', 'FK_ОтходыХСПаспортОтходаКлассОПС')
(1, 2, 0, 'ИДПаспортаОтхода', 'ПаспортОтходаИННХС', 'ИДПаспортаОтхода', 'ПаспортОтходаХС', 'FK_ПаспортОтходаХС')
(1, 2, 0, 'КодОтходаСКО', 'ОбъектыРазмещенияОтходы', 'КодСКО', 'СКО', 'FK_СКООбъектыРазмещенияОтходы')
(1, 2, 0, 'ОКЕИ', 'Спр_ОПИГруппы', 'КодОКЕИ', 'ОКЕИ', 'FK_Спр_ОПИГруппыОКЕИ')
(1, 2, 0, 'Тип документа владения', 'ОбъектыРазмещения', 'Код документа', 'Спр_ОбРазТипыДокументов', 'FK_ТДПДОбъектыРазмещения')
(1, 2, 0, 'ИДТОВоздухРазрешения', 'ТОВоздухРазрешения', 'ИДТОВоздухРазрешения', 'ТОВоздухРазрешенияЗВ', 'FK_ТОВоздухРазрешения')
(1, 2, 0, 'КодЗВ', 'ТОВоздухРазрешенияЗВ', 'КодЗВ', 'Спр_ЗагрязняющиеВещества', 'FK_ТОВоздухРазрешенияЗВ')
(1, 2, 0, 'Владелец земельного участка', 'ОбъектыРазмещения', 'КодХС', 'ХозяйствующиеСубъекты', 'FK_ХСЗУОбъектыРазмещения')
(1, 2, 0, 'КодХС', 'ХозяйствующиеСубъектыПрежниеРеквизиты', 'КодХС', 'ХозяйствующиеСубъекты', 'FK_ХСПрежниеРеквизиты')
(1, 2, 0, 'Эксплуатирующая организация', 'ОбъектыРазмещения', 'КодХС', 'ХозяйствующиеСубъекты', 'FK_ХСЭООбъектыРазмещения')
(1, 2, 0, 'SprID', 'TypeCommon', 'SprID', 'TypeComRef', 'TypeComRefTypeCommon')
(1, 2, 0, 'ИДОбъектаПереработки', 'ДТ_ВторичныеОтходы', 'ИДОбъектаПереработки', 'ДТ_Объекты', 'ДТ_ОбъектыДТ_ВторичныеОтходы')
(1, 2, 0, 'ИДОбъектаПереработки', 'ДТ_Мониторинг', 'ИДОбъектаПереработки', 'ДТ_Объекты', 'ДТ_ОбъектыДТ_Мониторинг')
(1, 2, 0, 'ИДОбъектаПереработки', 'ДТ_НазначениеОбъекта', 'ИДОбъектаПереработки', 'ДТ_Объекты', 'ДТ_ОбъектыДТ_НазначениеОбъекта')
(1, 2, 0, 'ИДОбъектаПереработки', 'ДТ_ПерерабатываемыеОтходы', 'ИДОбъектаПереработки', 'ДТ_Объекты', 'ДТ_ОбъектыДТ_ПерерабатываемыеОтходы')
(1, 2, 0, 'ИДОбъектаПереработки', 'ДТ_Продукция', 'ИДОбъектаПереработки', 'ДТ_Объекты', 'ДТ_ОбъектыДТ_Продукция')
(1, 2, 0, 'КодОКП', 'ОКП', 'Код ОКП', 'ДТ_Продукция', 'ДТ_ПродукцияОКП')
(1, 2, 0, 'ИДВидаОтхода', 'ЛимитыРазмещениеОтходов', 'ИДВидаОтхода', 'ЛимитыНормативыОбразования', 'ЛимитыРОЛимитыНО')
(1, 2, 0, 'ИДЛимитаХС', 'ЛимитыХС', 'ИДЛимитаХС', 'ЛимитыНормативыОбразования', 'ЛимитыХСЛимитыНО')
(1, 2, 0, 'ИДЛицензированногоВидаОтхода', 'ЛицензированныеВидыДеятельности', 'ИДЛицензированногоВидаОтхода', 'ЛицензированныеВидыОтхода', 'ЛицензированныеВидыОтходаЛицензированныеВиды
Деятельности')
(1, 2, 0, 'КодФККО', 'ФККО', 'КодОтходаФККО', 'ЛицензированныеВидыОтхода', 'ЛицензированныеВидыОтходаФККО')
(1, 2, 0, 'ИДЛицензии', 'ЛицензированныеВидыОтхода', 'ИДЛицензии', 'ЛицензияХС', 'ЛицензияХСЛицензированныеВидыОтхода')
(1, 2, 0, 'ИДЛицензии', 'ЛицензированныеПодразделенияХС', 'ИДЛицензии', 'ЛицензияХС', 'ЛицензияХСЛицензированныеПодразделенияХС')
(1, 2, 0, 'КодОбъектаРазмещения', 'ОбъектыРазмещенияПрежниеВладельцы', 'КодОбъектаРазмещения', 'ОбъектыРазмещения', 'ОбъектыРазмещенияВладельцы')
(1, 2, 0, 'КодОбъекта', 'ОбъектыРазмещенияКоординаты', 'КодОбъектаРазмещения', 'ОбъектыРазмещения', 'ОбъектыРазмещенияОбъектыРазмещенияКоординаты')
(1, 2, 0, 'КодОбъектаРазмещения', 'ОбъектыРазмещенияОтходы', 'КодОбъектаРазмещения', 'ОбъектыРазмещения', 'ОбъектыРазмещенияОбъектыРазмещенияОтходы')
(1, 2, 0, 'КодОбъектаРазмещения', 'РазмещениеПоОбъектам', 'КодОбъектаРазмещения', 'ОбъектыРазмещения', 'ОбъектыРазмещенияРазмещениеПоОбъектам')
(1, 2, 0, 'ОКАТО', 'ОбъектыРазмещения', 'КодОКАТО', 'ОКАТО', 'ОКАТООбъектыРазмещения')
(1, 2, 0, 'ОКАТО', 'Спр_РазработчикиТехнологий', 'КодОКАТО', 'ОКАТО', 'ОКАТОСпр_РазработчикиТехнологий')
(1, 2, 0, 'ОКАТО', 'ХозяйствующиеСубъекты', 'КодОКАТО', 'ОКАТО', 'ОКАТОХозяйствующиеСубъекты')
(1, 2, 0, 'ОКВЭД', 'Спр_РазработчикиТехнологий', 'КодОКВЭД', 'ОКВЭД', 'ОКВЭДСпр_РазработчикиТехнологий')
(1, 2, 0, 'ОКВЭД', 'ХозяйствующиеСубъекты', 'КодОКВЭД', 'ОКВЭД', 'ОКВЭДХозяйствующиеСубъекты')
(1, 2, 0, 'ОКОГУ', 'Спр_РазработчикиТехнологий', 'КодОКОГУ', 'ОКОГУ', 'ОКОГУСпр_РазработчикиТехнологий')
(1, 2, 0, 'ОКОНХ', 'ОбъектыРазмещения', 'КодОКОНХ', 'ОКОНХ', 'ОКОНХОбъектыРазмещения')
(1, 2, 0, 'ОКОНХ', 'ХозяйствующиеСубъекты', 'КодОКОНХ', 'ОКОНХ', 'ОКОНХХозяйствующиеСубъекты')
(1, 2, 0, 'ОКОПФ', 'ОбъектыРазмещения', 'КодОКОПФ', 'ОКОПФ', 'ОКОПФОбъектыРазмещения')
(1, 2, 0, 'ОКОПФ', 'Спр_РазработчикиТехнологий', 'КодОКОПФ', 'ОКОПФ', 'ОКОПФСпр_РазработчикиТехнологий')
(1, 2, 0, 'ОКФС', 'ОбъектыРазмещения', 'КодОКФС', 'ОКФС', 'ОКФСОбъектыРазмещения')
(1, 2, 0, 'ОКФС', 'Спр_РазработчикиТехнологий', 'КодОКФС', 'ОКФС', 'ОКФССпр_РазработчикиТехнологий')
(1, 2, 0, 'ИДОтходыХС', 'ПереданныеОтходы', 'ИДОтходыХС', 'ТехническийОтчетОтходыХС', 'ОтходыХСПереданныеОтходы')
(1, 2, 0, 'ИДОтходыХС', 'ПолученныеОтходы', 'ИДОтходыХС', 'ТехническийОтчетОтходыХС', 'ОтходыХСПолученныеОтходы')
(1, 2, 0, 'ИДОтходыХС', 'РазмещениеПоОбъектам', 'ИДОтходыХС', 'ТехническийОтчетОтходыХС', 'ОтходыХСРазмещениеПоОбъектам')
(1, 2, 0, 'КодСКО', 'СКО', 'КодОтходаПоСКО', 'ПаспортОтходаХС', 'ПаспортОтходаХССКО')
(1, 2, 0, 'КодФККО', 'ФККО', 'КодОтходаПоФККО', 'ПаспортОтходаХС', 'ПаспортОтходаХСФККО')
(1, 2, 0, 'ИДПаспорта', 'ХимическийСостав', 'ИДПаспортаОтхода', 'ПаспортОтходаХС', 'ПаспортОтходаХСХимическийСостав')
(1, 2, 0, 'ИНН', 'ХозяйствующиеСубъекты', 'ИННХС', 'ПаспортОтходаХС', 'ПаспортОтходаХСХозяйствующиеСубъекты')
(1, 2, 0, 'КодОКП', 'ОКП', 'Код ОКП', 'РТ_Продукция', 'РТ_ПродукцияОКП')
(1, 2, 0, 'ИДУстановки', 'РТ_ВторичныеОтходы', 'ИДУстановки', 'РТ_ТехнологическиеУстановки', 'РТ_ТехнологическиеУстановкиРТ_ВторичныеОтходы')
(1, 2, 0, 'ИДУстановки', 'РТ_НазначениеУстановки', 'ИДУстановки', 'РТ_ТехнологическиеУстановки', 'РТ_ТехнологическиеУстановкиРТ_НазначениеУстановки')
(1, 2, 0, 'ИДУстановки', 'РТ_ПерерабатываемыеОтходы', 'ИДУстановки', 'РТ_ТехнологическиеУстановки', 'РТ_ТехнологическиеУстановкиРТ_ПерерабатываемыеОтходы')
(1, 2, 0, 'ИДУстановки', 'РТ_Продукция', 'ИДУстановки', 'РТ_ТехнологическиеУстановки', 'РТ_ТехнологическиеУстановкиРТ_Продукция')
(1, 2, 0, 'Режим эксплуатации', 'РТ_ТехнологическиеУстановки', 'Код режима эксплуатации', 'Спр_РТРежимЭксплуатации', 'РТ_ТУСпр_РТРежимЭксплуатации')
(1, 2, 0, 'Тип установки', 'РТ_ТехнологическиеУстановки', 'Код типа установки', 'Спр_РТТипУстановки', 'РТ_ТУСпр_РТТипУстановки')
(1, 2, 0, 'КодОтходаСКО', 'ДТ_ВторичныеОтходы', 'КодСКО', 'СКО', 'СКОДТ_ВторичныеОтходы')
(1, 2, 0, 'КодОтходаСКО', 'ДТ_ПерерабатываемыеОтходы', 'КодСКО', 'СКО', 'СКОДТ_ПерерабатываемыеОтходы')
(1, 2, 0, 'КодОтходаСКО', 'ЛимитыНормативыОбразования', 'КодСКО', 'СКО', 'СКОЛимитыНО')
(1, 2, 0, 'КодОтходаСКО', 'ЛицензированныеВидыОтхода', 'КодСКО', 'СКО', 'СКОЛицензированныеВидыОтхода')
(1, 2, 0, 'КодОтходаСКО', 'ТехническийОтчетОтходыХС', 'КодСКО', 'СКО', 'СКООтходыХС')
(1, 2, 0, 'КодОтходаСКО', 'РТ_ВторичныеОтходы', 'КодСКО', 'СКО', 'СКОРТ_ВторичныеОтходы')
(1, 2, 0, 'КодОтходаСКО', 'РТ_ПерерабатываемыеОтходы', 'КодСКО', 'СКО', 'СКОРТ_ПерерабатываемыеОтходы')
(1, 2, 0, 'Код вида мониторинга ОПС', 'ДТ_Мониторинг', 'Код вида мониторинга', 'Спр_ДТВидыМониторинга', 'Спр_ДТВидыМониторингаДТ_Мониторинг')
(1, 2, 0, 'Код назначения', 'ДТ_НазначениеОбъекта', 'Код назначения объекта переработки', 'Спр_ДТНазначениеОбъектаПереработки', 'Спр_ДТНазначениеОбъектаПереработкиДТ_НазначениеОбъекта
')
(1, 2, 0, 'Код назначения', 'РТ_НазначениеУстановки', 'Код назначения объекта переработки', 'Спр_ДТНазначениеОбъектаПереработки', 'Спр_ДТНазначениеОбъектаПереработкиРТ_НазначениеУстан
овки')
(1, 2, 0, 'Код соблюдения нормативов', 'ДТ_Мониторинг', 'Код норматива качества', 'Спр_ДТНормативыКачества', 'Спр_ДТНормативыКачестваДТ_Мониторинг')
(1, 2, 0, 'КодВидаДеятельности', 'ЛицензированныеВидыДеятельности', 'Код вида деятельности', 'Спр_ЛицВидыДеятельности', 'Спр_ЛицВидыДеятельностиЛицензированныеВидыДеятельности')
(1, 2, 0, 'Код лицензировавшего органа', 'ЛицензияХС', 'КодЛицензировавшегоОргана', 'Спр_ЛицОрганизации', 'Спр_ЛицОрганизацииЛицензияХС')
(1, 2, 0, 'ИДМакетаОтчета', 'Спр_МакетОтчетаПоля', 'ИДМакетаОтчета', 'Спр_МакетОтчета', 'Спр_МакетОтчетаСпр_МакетОтчетаПоля')
(1, 2, 0, 'Код вида объекта', 'ОбъектыРазмещения', 'Код вида', 'Спр_ОбРазВид', 'Спр_ОбРазВидОбъектыРазмещения')
(1, 2, 0, 'Тип противофильтрационного экрана', 'ОбъектыРазмещения', 'Код экрана', 'Спр_ОбРазЗащитныеЭкраны', 'Спр_ОбРазЗащитныеЭкраныОбъектыРазмещения')
(1, 2, 0, 'Код формы собственности на землю', 'ОбъектыРазмещения', 'Код формы собственности на землю', 'Спр_ОбРазФормаСобственностиНаЗемлю', 'Спр_ОбРазМестоНазначенияОбъектыРазмещения
')
(1, 2, 0, 'Код назначения объекта', 'ОбъектыРазмещения', 'Код назначения', 'Спр_ОбРазНазначение', 'Спр_ОбРазНазначениеОбъектыРазмещения')
(1, 2, 0, 'Состояние объекта', 'ОбъектыРазмещения', 'Код состояния', 'Спр_ОбРазСостояниеОбъекта', 'Спр_ОбРазСостояниеОбъектаОбъектыРазмещения')
(1, 2, 0, 'Код способа размещения', 'ОбъектыРазмещенияОтходы', 'Код размещения', 'Спр_ОбРазСпособРазмещения', 'Спр_ОбРазСпособРазмещенияОбъектыРазмещенияОтходы')
(1, 2, 0, 'Тип документа землепользования', 'ОбъектыРазмещения', 'Код документа', 'Спр_ОбРазТипыДокументов', 'Спр_ОбРазТипыДокументовОбъектыРазмещения')
(1, 2, 0, 'Учет объекта в проекте ПДВ', 'ОбъектыРазмещения', 'Код учета', 'Спр_ОбРазУчетПДВ', 'Спр_ОбРазУчетПДВОбъектыРазмещения')
(1, 2, 0, 'Учет объекта в проекте ПДС', 'ОбъектыРазмещения', 'Код учета', 'Спр_ОбРазУчетПДВ', 'Спр_ОбРазУчетПДВОбъектыРазмещения1')
(1, 2, 0, 'КодМО', 'Спр_Территории', 'Код округа', 'Спр_Округ', 'Спр_ОкругСпр_Территории')
(1, 2, 0, 'КодОкруга', 'Спр_Территории', 'Код округа', 'Спр_Округ', 'Спр_ОкругСпр_Территории1')
(1, 2, 0, 'ИДРазработчика', 'РТ_ТехнологическиеУстановки', 'ИДРазработчика', 'Спр_РазработчикиТехнологий', 'Спр_РазработчикиТехнологийРТ_ТехнологическиеУстановки')
(1, 2, 0, 'Код территории', 'ОбъектыРазмещения', 'Код территории', 'Спр_Территории', 'Спр_ТерриторииОбъектыРазмещения')
(1, 2, 0, 'Код территории', 'ХозяйствующиеСубъекты', 'Код территории', 'Спр_Территории', 'Спр_ТерриторииХозяйствующиеСубъекты')
(1, 2, 0, 'Код компоненты', 'ХимическийСостав', 'Код компоненты', 'Спр_ХимКомпоненты', 'Спр_ХимКомпонентыХимическийСостав')
(1, 2, 0, 'ИДТехническийОтчет', 'ТехническийОтчетОтходыХС', 'ИДТехническийОтчет', 'ТехническийОтчет', 'ТехническийОтчетОтходыХС')
(1, 2, 0, 'КодОтходаФККО', 'ДТ_ВторичныеОтходы', 'КодФККО', 'ФККО', 'ФККОДТ_ВторичныеОтходы')
(1, 2, 0, 'КодОтходаФККО', 'ДТ_ПерерабатываемыеОтходы', 'КодФККО', 'ФККО', 'ФККОДТ_ПерерабатываемыеОтходы')
(1, 2, 0, 'КодОтходаФККО', 'ЛимитыНормативыОбразования', 'КодФККО', 'ФККО', 'ФККОЛимитыНО')
(1, 2, 0, 'КодОтходаФККО', 'ОбъектыРазмещенияОтходы', 'КодФККО', 'ФККО', 'ФККООРОтходы')
(1, 2, 0, 'КодОтходаФККО', 'ТехническийОтчетОтходыХС', 'КодФККО', 'ФККО', 'ФККООтходыХС')
(1, 2, 0, 'КодОтходаФККО', 'РТ_ВторичныеОтходы', 'КодФККО', 'ФККО', 'ФККОРТ_ВторичныеОтходы')
(1, 2, 0, 'КодОтходаФККО', 'РТ_ПерерабатываемыеОтходы', 'КодФККО', 'ФККО', 'ФККОРТ_ПерерабатываемыеОтходы')
(1, 2, 0, 'Категория ХС', 'ХозяйствующиеСубъекты', 'TypeID', 'TypeCommon', 'ХозСубъектыКатегорияХС')
(1, 2, 0, 'Состояние', 'ХозяйствующиеСубъекты', 'TypeID', 'TypeCommon', 'ХозСубъектыСостояниеХС')
(1, 2, 0, 'КодХС', 'ОбъектыРазмещенияПрежниеВладельцы', 'КодХС', 'ХозяйствующиеСубъекты', 'ХозяйствующиеСубъектыВладельцы')
(1, 2, 0, 'КодХС', 'ЛицензированныеПодразделенияХС', 'КодХС', 'ХозяйствующиеСубъекты', 'ХозяйствующиеСубъектыЛицензированныеПодразделенияХС')
(1, 2, 0, 'КодХС', 'ОбъектыРазмещения', 'КодХС', 'ХозяйствующиеСубъекты', 'ХозяйствующиеСубъектыОбъектыРазмещения')
(1, 2, 0, 'КодХС', 'ПереданныеОтходы', 'КодХС', 'ХозяйствующиеСубъекты', 'ХозяйствующиеСубъектыПереданныеОтходы')
(1, 2, 0, 'КодХС', 'ПолученныеОтходы', 'КодХС', 'ХозяйствующиеСубъекты', 'ХозяйствующиеСубъектыПолученныеОтходы')
(1, 2, 0, 'КодХС', 'ТехническийОтчет', 'КодХС', 'ХозяйствующиеСубъекты', 'ХозяйствующиеСубъектыТехническийОтчет')

"""



db_file = r'C:\Users\Tanika\PycharmProjects\CreateMaps\base.mdb'
user = 'admin'
password = 'Masterkey1'

db = MDBDatabase(db_file, user, password)
selected = 'ОПИ_Участки'

tables = db.tables()
relationships_inner, relations_outer = db.relationships()
paths, used_tables = make_inner_paths_for_table(selected, tables, relationships_inner)

tree = OrderedDict()
for path in paths:
    current_dict = tree
    last_index = len(path)-1
    for i, p in enumerate(path):
        if i == last_index:
            current_dict[p.name] = OrderedDict()
        else:
            current_dict = current_dict[p.table_fk]

print(used_tables)
tt = set()
for x in used_tables:
    rs = relations_outer.get(x, [])
    for r in rs:
        #('table', 'table_fk', 'relation_table', 'relation_table_pk')
        tt.add(r.table)

print(tt - used_tables)
# print(r)
# MSysIMEXColumns
print('-' * 40)
# conn = make_mdb_odbc_connection(db_file, user, password)
# c = (conn.cursor())
# conn.getinfo()
# c.execute("""SELECT * from MSysAccessObjects""")
# rows = c.fetchall()
# for x in rows:
#     pass
#     # print(x)
# # pprint(r)
#
